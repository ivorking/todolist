[{"/home/ivor/Dev/todolist/src/index.js":"1","/home/ivor/Dev/todolist/src/ToDoContainer.js":"2","/home/ivor/Dev/todolist/src/App.js":"3","/home/ivor/Dev/todolist/src/reportWebVitals.js":"4","/home/ivor/Dev/todolist/src/components/DisplayList.js":"5","/home/ivor/Dev/todolist/src/components/AddItem.js":"6","/home/ivor/Dev/todolist/src/components/DisplayEdit.js":"7"},{"size":557,"mtime":1622064856609,"results":"8","hashOfConfig":"9"},{"size":2924,"mtime":1624601254038,"results":"10","hashOfConfig":"9"},{"size":506,"mtime":1622064856609,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1622064856609,"results":"12","hashOfConfig":"9"},{"size":3288,"mtime":1624236260519,"results":"13","hashOfConfig":"9"},{"size":1407,"mtime":1624137671974,"results":"14","hashOfConfig":"9"},{"size":1378,"mtime":1624137477771,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"15993sc",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"/home/ivor/Dev/todolist/src/index.js",["36"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ToDoContainer from './ToDoContainer.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToDoContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["37","38"],"/home/ivor/Dev/todolist/src/ToDoContainer.js",["39","40","41"],"/home/ivor/Dev/todolist/src/App.js",[],"/home/ivor/Dev/todolist/src/reportWebVitals.js",[],"/home/ivor/Dev/todolist/src/components/DisplayList.js",["42","43","44","45","46","47","48","49"],"import React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport '@fontsource/roboto';\nimport ArrowUpwardRoundedIcon from '@material-ui/icons/ArrowUpwardRounded';\nimport ArrowDownwardRoundedIcon from '@material-ui/icons/ArrowDownwardRounded';\n\nexport class DisplayList extends Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n\n    if (this.props.listOfItems) {\n\n      if (this.props.editVal !== null) {\n\n        return (\n          <div>\n            <table style={{opacity: '20%'}}>\n              {this.props.listOfItems.map((item, index) => (\n                <ListItem key ={index}> \n                  <tr>\n                    <td>{index + 1}</td>\n                    <td>{item}</td>\n                    <td><Button variant=\"contained\" color=\"secondary\">Remove</Button></td>\n                    <td/>\n                    <td><Button variant=\"contained\" color=\"secondary\"> Edit </Button></td>\n                    <td></td>\n                    <td>\n                      <Button variant=\"contained\" color=\"secondary\" color=\"secondary\" onClick={() => {this.props.moveItemUp(index)}}>\n                        <ArrowUpwardRoundedIcon />\n                      </Button>\n                    </td>\n                    <td/>\n                    <td>\n                      <Button variant=\"contained\" color=\"secondary\" color=\"secondary\" onClick={() => {this.props.moveItemDown(index)}}>\n                        <ArrowDownwardRoundedIcon />\n                      </Button>\n                    </td>     \n                  </tr>            \n                </ListItem>\n              ))}\n            </table>\n          </div>\n        )\n\n      } else {\n  \n        return (\n          <div>\n            <table style={{opacity: '100%'}}>\n              {this.props.listOfItems.map((item, index) => (\n                <ListItem key ={index}> \n                  <tr>\n                    <td>{index + 1}</td>\n                    <td>{item}</td>\n                    <td><Button variant=\"contained\" color=\"secondary\" onClick={() => {this.props.deleteItem(index); }}>Remove</Button></td>\n                    <td/>\n                    <td><Button variant=\"contained\" color=\"secondary\" onClick={() => {this.props.editItem(index)}}>Edit</Button></td>\n                    <td/>\n                    <td>\n                      <Button variant=\"contained\" color=\"secondary\" color=\"secondary\" onClick={() => {this.props.moveItemUp(index)}}>\n                        <ArrowUpwardRoundedIcon />\n                      </Button>\n                    </td>\n                    <td/>\n                    <td>\n                      <Button variant=\"contained\" color=\"secondary\" color=\"secondary\" onClick={() => {this.props.moveItemDown(index)}}>\n                        <ArrowDownwardRoundedIcon />\n                      </Button>\n                    </td>                  \n                  </tr>            \n                </ListItem>\n              ))}\n            </table>\n          </div>\n        )\n\n      }\n\n    } else {\n      return null\n    }\n  \n  }\n}\n\nexport default DisplayList","/home/ivor/Dev/todolist/src/components/AddItem.js",["50"],"import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\n\nexport class AddItem extends Component {\n  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      newItem: \"\",\n      label: \"Type your To Do here\"\n    }\n\n    this.addItem = this.addItem.bind(this);\n    this.handleChange = this.handleChange.bind(this)\n    this.keyPress = this.keyPress.bind(this)\n\n  }\n\n  addItem(e) {\n    this.props.updateItemList(this.newItem)\n    this.setState({\n      newItem: \"\",\n      label: \"Add another To Do\"\n    })\n  }\n\n  handleChange(e) {\n    this.newItem = e.target.value\n    this.setState({\n      newItem: this.newItem\n    })\n  }\n\n  keyPress(e) {\n    if(e.keyCode == 13){\n      this.props.updateItemList(this.newItem)\n      this.setState({\n        newItem: \"\",\n        label: \"Add another To Do\"\n      })\n    }\n  }\n\n  render() {\n\n    return (\n      <div>\n        <TextField \n          type=\"text\" \n          label={this.state.label} \n          variant=\"outlined\" \n          value={this.state.newItem} \n          onChange={this.handleChange} \n          onKeyDown={this.keyPress}\n          style={{margin: 20}}\n        />\n        <Button style={{ display: 'block', marginLeft: 20 }} variant=\"contained\" color=\"primary\" onClick={this.addItem}>\n          Add item\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default AddItem;","/home/ivor/Dev/todolist/src/components/DisplayEdit.js",["51","52"],"import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\n\nclass DisplayEdit extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      newEditingValue: \"\"\n    }\n\n    this.handleChangeDisp = this.handleChangeDisp.bind(this);\n    this.keyPress = this.keyPress.bind(this)\n\n  }\n\n  componentWillMount() {\n    this.state.newEditingValue = this.props.listOfItems[this.props.editVal]\n  }\n\n  handleChangeDisp(e) {\n    let fieldValue = e.target.value\n    this.setState({\n      newEditingValue: fieldValue\n    })\n  }\n\n  keyPress(e) {\n    console.log(e.keyCode)\n    if (e.keyCode == 13) {\n      this.props.updateEditedItem(this.state.newEditingValue)\n    }\n  }\n\n  render() {\n\n    console.log('in DisplayEdit')\n    \n    return (\n      <div>\n\n        <TextField \n          type=\"text\" \n          label=\"Editing your To Do\" \n          variant=\"outlined\" \n          value={this.state.newEditingValue} \n          onChange={this.handleChangeDisp}\n          onKeyDown={this.keyPress} \n          style={{margin: 20}}\n        />\n\n        <Button style={{ display: 'block', marginLeft: 20 }} variant=\"contained\" color=\"primary\" onClick={() => {this.props.updateEditedItem(this.state.newEditingValue)}}>\n          Done\n        </Button>\n\n      </div>\n    )\n  }\n\n}\n\nexport default DisplayEdit",["53","54"],{"ruleId":"55","severity":1,"message":"56","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":11},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"55","severity":1,"message":"63","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":65,"column":15,"nodeType":"66","messageId":"67","endLine":65,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":76,"column":26,"nodeType":"66","messageId":"67","endLine":76,"endColumn":28},{"ruleId":"55","severity":1,"message":"68","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"69","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":17},{"ruleId":"55","severity":1,"message":"70","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":13,"column":3,"nodeType":"73","messageId":"74","endLine":15,"endColumn":4},{"ruleId":"75","severity":1,"message":"76","line":36,"column":69,"nodeType":"77","messageId":"78","endLine":36,"endColumn":86},{"ruleId":"75","severity":1,"message":"76","line":42,"column":69,"nodeType":"77","messageId":"78","endLine":42,"endColumn":86},{"ruleId":"75","severity":1,"message":"76","line":68,"column":69,"nodeType":"77","messageId":"78","endLine":68,"endColumn":86},{"ruleId":"75","severity":1,"message":"76","line":74,"column":69,"nodeType":"77","messageId":"78","endLine":74,"endColumn":86},{"ruleId":"64","severity":1,"message":"79","line":37,"column":18,"nodeType":"66","messageId":"67","endLine":37,"endColumn":20},{"ruleId":"80","severity":1,"message":"81","line":20,"column":5,"nodeType":"82","messageId":"83","endLine":20,"endColumn":15},{"ruleId":"64","severity":1,"message":"79","line":32,"column":19,"nodeType":"66","messageId":"67","endLine":32,"endColumn":21},{"ruleId":"59","replacedBy":"84"},{"ruleId":"61","replacedBy":"85"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'Component' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ReactDOM' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","Expected '===' and instead saw '=='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation",["86"],["87"],"no-global-assign","no-unsafe-negation"]